"""stash migrations

Revision ID: e1bd499ede79
Revises: 
Create Date: 2024-11-24 11:46:26.245367

"""
from typing import Sequence, Union

from alembic import op
import sqlalchemy as sa

from app.config import settings
from app.utils import get_password_hash

# revision identifiers, used by Alembic.
revision: str = 'e1bd499ede79'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.create_table('furniture',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('size_x', sa.Integer(), nullable=False),
        sa.Column('size_y', sa.Integer(), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table('inventory',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.PrimaryKeyConstraint('id')
    )
    op.create_table('offices',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('address', sa.String(), nullable=False),
        sa.Column('image', sa.String(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('address'),
        sa.UniqueConstraint('name')
    )
    roles_table = op.create_table('roles',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )
    op.create_table('floors',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.Column('office_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['office_id'], ['offices.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )
    op.create_table('whorehouse',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('office_id', sa.Integer(), nullable=False),
        sa.Column('inventory_id', sa.Integer(), nullable=True),
        sa.Column('furniture_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['furniture_id'], ['furniture.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['inventory_id'], ['inventory.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['office_id'], ['offices.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('furniture_id'),
        sa.UniqueConstraint('inventory_id')
    )
    op.create_table('map',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('office_id', sa.Integer(), nullable=False),
        sa.Column('floor_id', sa.Integer(), nullable=False),
        sa.Column('furniture_id', sa.Integer(), nullable=False),
        sa.Column('x', sa.Integer(), nullable=False),
        sa.Column('y', sa.Integer(), nullable=False),
        sa.Column('is_vertical', sa.Boolean(), nullable=False),
        sa.ForeignKeyConstraint(['floor_id'], ['floors.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['furniture_id'], ['furniture.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['office_id'], ['offices.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id')
    )
    users_table = op.create_table('users',
        sa.Column('id', sa.Uuid(), server_default=sa.text('uuid_generate_v4()'), nullable=False),
        sa.Column('fio', sa.String(), nullable=False),
        sa.Column('email', sa.String(), nullable=False),
        sa.Column('position', sa.String(), nullable=False),
        sa.Column('role_id', sa.Integer(), nullable=False),
        sa.Column('password', sa.String(), nullable=False),
        sa.Column('office_id', sa.Integer(), nullable=True),
        sa.Column('floor_id', sa.Integer(), nullable=True),
        sa.ForeignKeyConstraint(['floor_id'], ['floors.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['office_id'], ['offices.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['role_id'], ['roles.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('email'),
        sa.UniqueConstraint('fio')
    )
    op.create_table('user_furniture',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Uuid(), nullable=False),
        sa.Column('furniture_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['furniture_id'], ['furniture.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('furniture_id')
    )
    op.create_table('user_inventory',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('user_id', sa.Uuid(), nullable=False),
        sa.Column('inventory_id', sa.Integer(), nullable=False),
        sa.ForeignKeyConstraint(['inventory_id'], ['inventory.id'], ondelete='CASCADE'),
        sa.ForeignKeyConstraint(['user_id'], ['users.id'], ondelete='CASCADE'),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('inventory_id')
    )
    op.bulk_insert(
        roles_table,
        [{
            'id': 0,
            'name': 'admin',
        },
            {
                'id': 1,
                'name': 'user'
            }
        ]
    )
    op.bulk_insert(
        users_table,
        [{
            'fio': settings.ADMIN_FIO,
            'email': settings.ADMIN_EMAIL,
            'position': 'admin',
            'role_id': 0,
            'password': get_password_hash(settings.ADMIN_PASSWORD)
        }]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('user_inventory')
    op.drop_table('user_furniture')
    op.drop_table('users')
    op.drop_table('map')
    op.drop_table('whorehouse')
    op.drop_table('floors')
    op.drop_table('roles')
    op.drop_table('offices')
    op.drop_table('inventory')
    op.drop_table('furniture')
    # ### end Alembic commands ###
