"""create users and roles tables

Revision ID: ebfba5b17028
Revises: 
Create Date: 2024-11-22 20:46:02.979607

"""
from typing import Sequence, Union
from uuid import uuid4
from alembic import op
import sqlalchemy as sa

from app.config import settings
from app.utils import get_password_hash

# revision identifiers, used by Alembic.
revision: str = 'ebfba5b17028'
down_revision: Union[str, None] = None
branch_labels: Union[str, Sequence[str], None] = None
depends_on: Union[str, Sequence[str], None] = None


def upgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    users_table = op.create_table('users',
        sa.Column('id', sa.Uuid(), nullable=False),
        sa.Column('fio', sa.String(), nullable=False),
        sa.Column('email', sa.String(), nullable=False),
        sa.Column('position', sa.String(), nullable=False),
        sa.Column('role_id', sa.Integer(), nullable=False),
        sa.Column('password', sa.String(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('fio')
    )
    roles_table = op.create_table('roles',
        sa.Column('id', sa.Integer(), nullable=False),
        sa.Column('name', sa.String(), nullable=False),
        sa.PrimaryKeyConstraint('id'),
        sa.UniqueConstraint('name')
    )
    op.bulk_insert(
        roles_table,
        [{
                'id': 0,
                'name': 'admin',
            },
            {
                'id': 1,
                'name': 'user'
            }
        ]
    )
    op.bulk_insert(
        users_table,
        [{
            'id': uuid4(),
            'fio': settings.ADMIN_FIO,
            'email': settings.ADMIN_EMAIL,
            'position': 'admin',
            'role_id': 0,
            'password': get_password_hash(settings.ADMIN_PASSWORD)
        }]
    )
    # ### end Alembic commands ###


def downgrade() -> None:
    # ### commands auto generated by Alembic - please adjust! ###
    op.drop_table('users')
    # ### end Alembic commands ###
